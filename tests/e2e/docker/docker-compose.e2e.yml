services:
  postgres-e2e:
    image: postgres:15
    environment:
      POSTGRES_DB: weatherapi_e2e
      POSTGRES_USER: e2e_user
      POSTGRES_PASSWORD: e2e_pass
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U e2e_user -d weatherapi_e2e"]
      interval: 5s
      timeout: 5s
      retries: 5

  mock-weather-api-e2e:
    build:
      context: ../../../tests/mocks/weather-server
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s

  mailhog-e2e:
    image: mailhog/mailhog:latest
    ports:
      - "1026:1025"  # SMTP
      - "8026:8025"  # Web UI
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8025"]
      interval: 5s
      timeout: 3s
      retries: 5

  weather-app-e2e:
    build:
      context: ../../..
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres-e2e
      - DB_PORT=5432
      - DB_USER=e2e_user
      - DB_PASSWORD=e2e_pass
      - DB_NAME=weatherapi_e2e
      - DB_SSL_MODE=disable
      - WEATHER_API_KEY=test-api-key
      - WEATHER_API_BASE_URL=http://mock-weather-api-e2e:8080
      - EMAIL_SMTP_HOST=mailhog-e2e
      - EMAIL_SMTP_PORT=1025
      - EMAIL_SMTP_USERNAME=
      - EMAIL_SMTP_PASSWORD=
      - EMAIL_FROM_NAME=Weather API E2E
      - EMAIL_FROM_ADDRESS=test@weatherapi.com
      - APP_URL=http://localhost:8080
      - SERVER_PORT=8080
    depends_on:
      postgres-e2e:
        condition: service_healthy
      mock-weather-api-e2e:
        condition: service_healthy
      mailhog-e2e:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/debug"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
