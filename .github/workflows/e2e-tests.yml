name: E2E Tests

on:
  schedule:
    - cron: '0 2 * * *'  # Run nightly at 2 AM
  workflow_dispatch:  # Allow manual triggering
  pull_request:
  push:
    branches: [ "main" ]
    paths:
      - 'tests/e2e/**'
      - 'public/**'
      - 'api/**'

jobs:
  e2e-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        browser: [chromium, firefox]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-e2e-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-e2e-

    - name: Generate mocks
      run: make -f Makefile.mocks mocks

    - name: Setup E2E test environment
      run: make -f Makefile.testing _e2e-setup

    - name: Install Playwright browser
      run: |
        cd tests/e2e
        npm install
        npx playwright install ${{ matrix.browser }}

    - name: Run E2E tests for ${{ matrix.browser }}
      run: |
        cd tests/e2e
        npx playwright test --project=${{ matrix.browser }}

    - name: Cleanup E2E test environment
      if: always()
      run: make -f Makefile.testing _e2e-cleanup

    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.browser }}
        path: tests/e2e/playwright-report/
        retention-days: 7

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.browser }}
        path: tests/e2e/test-results/
        retention-days: 7
