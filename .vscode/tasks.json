{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "build",
            "type": "shell",
            "command": "go build -o weatherapi ./cmd/app/",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "reveal": "always"
            },
            "problemMatcher": ["$go"]
        },
        {
            "label": "run",
            "type": "shell",
            "command": "go run ./cmd/app/",
            "group": {
                "kind": "none"
            },
            "presentation": {
                "reveal": "always"
            },
            "problemMatcher": ["$go"]
        },
        {
            "label": "start-db",
            "type": "shell",
            "command": "docker-compose -f docker-compose.dev.yml up -d",
            "presentation": {
                "reveal": "always"
            },
            "problemMatcher": []
        },
        {
            "label": "stop-db",
            "type": "shell",
            "command": "docker-compose -f docker-compose.dev.yml down",
            "presentation": {
                "reveal": "always"
            },
            "problemMatcher": []
        },
        {
            "label": "test",
            "type": "shell",
            "command": "go test ./...",
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "presentation": {
                "reveal": "always"
            },
            "problemMatcher": ["$go"]
        },
        {
            "label": "test-unit",
            "type": "shell",
            "command": "go test ./internal/core/... ./pkg/...",
            "group": {
                "kind": "test"
            },
            "presentation": {
                "reveal": "always"
            },
            "problemMatcher": ["$go"]
        },
        {
            "label": "test-adapters",
            "type": "shell",
            "command": "go test ./internal/adapters/...",
            "group": {
                "kind": "test"
            },
            "presentation": {
                "reveal": "always"
            },
            "problemMatcher": ["$go"]
        },
        {
            "label": "lint",
            "type": "shell",
            "command": "golangci-lint run ./...",
            "presentation": {
                "reveal": "always"
            },
            "problemMatcher": ["$go"]
        },
        {
            "label": "clean-build",
            "type": "shell",
            "command": "go clean && go mod tidy && go build -o weatherapi ./cmd/app/",
            "group": {
                "kind": "build"
            },
            "presentation": {
                "reveal": "always"
            },
            "problemMatcher": ["$go"]
        },
        {
            "label": "arch-lint",
            "type": "shell",
            "command": "node",
            "args": [".vscode/scripts/arch-lint.js"],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "presentation": {
                "echo": false,
                "reveal": "silent",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": false
            },
            "problemMatcher": {
                "owner": "go-arch-lint",
                "fileLocation": "relative",
                "pattern": {
                    "regexp": "^(.+):(\\d+):(\\d+):\\s+(error|warning|info):\\s+(.+)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5
                }
            }
        },
        {
            "label": "lint-all",
            "dependsOrder": "sequence",
            "dependsOn": ["lint", "arch-lint"],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            }
        }
    ]
}
